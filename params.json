{"name":"One-Time-Pad Python","tagline":"A hacky implementation of One-time Pad in Python","body":"**One-Time-Pad Python is a command-line encryption tool**, which uses an\r\nencryption mechanism very similar to [One-time Pad](https://en.wikipedia.org/wiki/One-time_pad) (Duh. Thanks for\r\ntelling that)\r\n\r\nInstallation\r\n------------\r\n\r\nInstall it using pip\r\n\r\n    $ pip install onetimepad\r\n\r\nUsage\r\n-----\r\n\r\nTo use it from the command-line, run\r\n\r\n    $ onetimepad\r\n\r\nOr, import the onetimepad module in your script\r\n```python\r\n    #!/usr/bin/env python3\r\n\r\n    import onetimepad\r\n\r\n    cipher = onetimepad.encrypt('some text', 'a_random_key')\r\n    msg = onetimepad.decrypt(cipher, 'a_random_key')\r\n```\r\n\r\nSecurity\r\n--------\r\n\r\n1. The crypted message is very easy to crack if the length of key is\r\n   less than the length of message.\r\n2. In any case, the key is not nescessarily random, which makes this\r\n   tool as good as a toy.\r\n3. Thus, do not encrypt any real private stuff, it wonâ€™t protect you\r\n   from the NSA. *It is just a hack*.\r\n\r\nCopying\r\n-------\r\n\r\nThis project is licensed under the terms of MIT LICENSE, please see\r\n[LICENSE](https://raw.githubusercontent.com/jailuthra/onetimepad/master/LICENSE) file for more details.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}